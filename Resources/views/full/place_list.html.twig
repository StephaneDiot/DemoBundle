{% extends "eZDemoBundle::pagelayout.html.twig" %}

{% block content %}
    <section class="content-view-full">
        <div class="place-list-form">
            <form action="">
                <p>
                    <select id="max-dist-place-list" disabled="disabled">
                        <option value="1000">{{ 'within 1000km'|trans }}</option>
                        <option value="100">{{ 'within 100km'|trans }}</option>
                        <option value="10">{{ 'within 10km'|trans }}</option>
                        <option value="1">{{ 'within 1km'|trans }}</option>
                        <option value="0">{{ 'Show all places'|trans }}</option>
                    </select>
                </p>
                <p>
                    <button class="btn btn-warning btn-large" id="sort-place-list" disabled="disabled">
                        {{ 'Show places'|trans }}
                    </button>
                </p>
            </form>
            <p id="sort-place-list-errors" class="place-list-text-error"></p>
            <p class="jsenable-place-list-info place-list-text-info">
                {{ 'Javascript must be enabled in order to use the place list feature'|trans }}
            </p>
        </div>
        <div class="row">
            <div class="span8">
                <h1>{{ ez_render_field( content, 'name') }}</h1>

                <div id="place-list-container">
                    {{ render( controller(
                            'eZDemoBundle:Place:listPlaceList',
                                { 'locationId': location.id }
                            )
                        )
                    }}
                </div>
            </div>
        </div>
    </section>
    <script>
        YUI(YUI3_config).use('io-base', 'node', function(Y) {
            //Generating URL with keys values that will be replaced when clicking
            var uri = '{{ path(
                        'ezpublish_ezdemo_ajax_sorted_place_list',
                        {'locationId': location.id, 'latitude': 'key_lat', 'longitude': 'key_lon','maxDist': 'key_dist'}
                        ) }}',
                noGeoLocateMsg = '{{ 'Geolocation feature is not available on your browser, please consider updating it.'|trans }}',
                disabledGeoLocateMsg = '{{ 'Geolocation feature is disabled on your browser. Check the permission settings to allow it.'|trans }}',
                ajaxErrorMsg = '{{ 'Your request has failed, please try again later.'|trans }}',
                container = Y.one('#place-list-container'),
                sortButton = Y.one('#sort-place-list'),
                errorContainer = Y.one('#sort-place-list-errors'),
                distanceList = Y.one('#max-dist-place-list');

            if ("geolocation" in navigator) {
                sortButton.set('disabled', false);
                distanceList.set('disabled', false);
            }else{
                errorContainer.setHTML(noGeoLocateMsg);
            }

            /**
             * Updates a sorted list of places
             * @params string uri of ajax method
             * @params function callback executed on success of the ajax request
             */
            function updatePlaceList(uri, onSuccessPlaceList)
            {
                var config = {
                    method: 'GET',
                    on: {
                        success: onSuccessPlaceList,
                        failure: function (id, response) {
                            container.removeClass('place-list-loading');
                            errorContainer.setHTML(ajaxErrorMsg);
                        }
                    }
                };

                Y.io( uri, config );
            }

            sortButton.on('click', function (e) {
                e.preventDefault();
                container.addClass('place-list-loading');

                navigator.geolocation.getCurrentPosition(function (position) {

                    var uri = '{{ path(
                        'ezpublish_ezdemo_ajax_sorted_place_list',
                        {'locationId': location.id, 'latitude': 'key_lat', 'longitude': 'key_lon','maxDist': 'key_dist'}
                        ) }}',
                        maxDist = distanceList.get('value');

                    //Case maxdist == 0 allows to show all places (unsorted list)
                    if (maxDist == 0){
                        uri = '{{ path('ezpublish_ezdemo_ajax_default_placeList',{ 'locationId': location.id } ) }}';
                    }else{
                        uri = uri.replace('key_lat', position.coords.latitude).replace('key_lon', position.coords.longitude).replace('key_dist', maxDist);
                    }

                    updatePlaceList(uri, function(id, response) {
                        container.setHTML(response.responseText);
                        container.removeClass('place-list-loading');
                    });
                }, function () {
                    container.removeClass('place-list-loading');
                    errorContainer.setHTML(disabledGeoLocateMsg);
                }, {timeout:3000});
            });
        });
    </script>
{% endblock %}
